<?xml version="1.0" encoding="UTF-8"?>
<!-- status="TRACE"这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出。 -->
<!-- ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF。 All:最低等级的，用于打开所有日志记录. 
	Trace:是追踪，就是程序推进一下. Debug:指出细粒度信息事件对调试应用程序是非常有帮助的. Info:消息在粗粒度级别上突出强调应用程序的运行过程. 
	Warn:输出警告及warn以下级别的日志. Error:输出错误信息日志. Fatal:输出每个严重的错误事件将会导致应用程序的退出的日志. OFF:最高等级的，用于关闭所有日志记录. -->
<configuration status="off" monitorInterval="10">
	<properties> <!-- 配置日志文件输出目录，此配置将日志输出到tomcat根目录下的指定文件夹 -->
		<property name="LOG_HOME">${web:rootDir}/logs</property>
		<!-- <property name="LOG_PATTERN_Console"> [%-5p] %d{MM-dd HH:mm:ss} %c - %m%n</property> -->
		<property name="LOG_PATTERN_Console"> [%-5p] %d{HH:mm:ss.SSS} (%c:%L) - %m%n</property>
		<!-- <property name="LOG_PATTERN_RollingFile">%5p [%t] %d{yyyy-MM-dd HH:mm:ss} (%F:%L) %m%n</property> -->
		<property name="LOG_PATTERN_RollingFile">[%-5p] %d{yyyy-MM-dd HH:mm:ss.SSS} (%F:%L) %m%n</property>
		<!-- <property name="LOG_FILE_PATTERN">- %d{yyyy-MM-dd HH_mm_ss}.log.gz</property> -->
		<property name="LOG_FILE_PATTERN">_%d{yyyy-MM-dd}-%i.log.gz</property>
		<property name="LOG_FILE_MAXSIZE">100MB</property>
	</properties>
	<Appenders>

		<!-- 优先级从高到低分别是 OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL -->
		<!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
		<!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
		<!--输出日志的格式 %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间 %p : 日志输出格式 %c : logger的名称 
			%m : 日志内容，即 logger.info("message") %n : 换行符 %C : Java类名 %L : 日志输出所在行数 %M 
			: 日志输出所在方法名 hostName : 本地机器名 hostAddress : 本地ip地址 -->

		<!--这个输出控制台的配置，这里输出除了warn和error级别的信息到System.out -->
		<Console name="console_out_appender" target="SYSTEM_OUT">
			<!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) . -->
			<ThresholdFilter level="ERROR" onMatch="DENY"
				onMismatch="NEUTRAL" />
			<ThresholdFilter level="trace" onMatch="ACCEPT"
				onMismatch="DENY" />
			<!-- 输出日志的格式 -->
			<PatternLayout pattern="${LOG_PATTERN_Console}" />
		</Console>
		<!-- 这个输出控制台的配置，这里输出error级别的信息到System.err，在eclipse控制台上看到的是红色文字 -->
		<Console name="console_err_appender" target="SYSTEM_ERR">
			<ThresholdFilter level="ERROR" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN_Console}" />
		</Console>

		<!-- TRACE级别日志 ; 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，此appender只输出trace级别的数据到trace.log -->
		<RollingFile name="trace_appender" immediateFlush="true"
			fileName="${LOG_HOME}/trace.log" filePattern="${LOG_HOME}/trace/trace${LOG_FILE_PATTERN}">
			<PatternLayout>
				<pattern>${LOG_PATTERN_RollingFile}</pattern>
			</PatternLayout>
			<Policies>
				<!-- 每个日志文件最大2MB -->
				<SizeBasedTriggeringPolicy size="${LOG_FILE_MAXSIZE}" />

			</Policies>
			<Filters>
				<!-- 此Filter意思是，只输出TRACE级别的数据 DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； 
					ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
				<ThresholdFilter level="debug" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="trace" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingFile>

		<!-- DEBUG级别日志 设置日志格式并配置日志压缩格式，压缩文件独立放在一个文件夹内， 日期格式不能为冒号，否则无法生成，因为文件名不允许有冒号，此appender只输出debug级别的数据到debug.log; -->
		<RollingFile name="debug_appender" immediateFlush="true"
			fileName="${LOG_HOME}/debug.log" filePattern="${LOG_HOME}/debug/debug${LOG_FILE_PATTERN}">
			<PatternLayout>
				<pattern>${LOG_PATTERN_RollingFile}</pattern>
			</PatternLayout>
			<Policies><!-- 每个日志文件最大2MB ; -->
				<SizeBasedTriggeringPolicy size="${LOG_FILE_MAXSIZE}" />

				<!-- 如果启用此配置，则日志会按文件名生成新压缩文件， 即如果filePattern配置的日期格式为 %d{yyyy-MM-dd HH} 
					，则每小时生成一个压缩文件， 如果filePattern配置的日期格式为 %d{yyyy-MM-dd} ，则天生成一个压缩文件 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />

			</Policies>
			<Filters><!-- 此Filter意思是，只输出debug级别的数据 -->
				<ThresholdFilter level="info" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="debug" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingFile>

		<!-- INFO级别日志 -->
		<RollingFile name="info_appender" immediateFlush="true"
			fileName="${LOG_HOME}/info.log" filePattern="${LOG_HOME}/info/info${LOG_FILE_PATTERN}">
			<PatternLayout>
				<pattern>${LOG_PATTERN_RollingFile}</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="${LOG_FILE_MAXSIZE}" />
			</Policies>
			<Filters>
				<ThresholdFilter level="warn" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="info" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingFile>

		<!-- WARN级别日志 -->
		<RollingFile name="warn_appender" immediateFlush="true"
			fileName="${LOG_HOME}/warn.log" filePattern="${LOG_HOME}/warn/warn${LOG_FILE_PATTERN}">
			<PatternLayout>
				<pattern>${LOG_PATTERN_RollingFile}</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="${LOG_FILE_MAXSIZE}" />
			</Policies>
			<Filters>
				<ThresholdFilter level="error" onMatch="DENY"
					onMismatch="NEUTRAL" />
				<ThresholdFilter level="warn" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingFile>

		<!-- ERROR级别日志 -->
		<RollingFile name="error_appender" immediateFlush="true"
			fileName="${LOG_HOME}/error.log" filePattern="${LOG_HOME}/error/error${LOG_FILE_PATTERN}">
			<PatternLayout>
				<pattern>${LOG_PATTERN_RollingFile}</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="${LOG_FILE_MAXSIZE}" />
			</Policies>
			<Filters>
				<ThresholdFilter level="error" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingFile>
		<!-- INFO、WARN、ERROR级别日志 -->
		<RollingFile name="applog_appender" immediateFlush="true"
			fileName="${LOG_HOME}/applog.log" filePattern="${LOG_HOME}/applog/applog${LOG_FILE_PATTERN}">
			<PatternLayout>
				<pattern>${LOG_PATTERN_RollingFile}</pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="${LOG_FILE_MAXSIZE}" />
			</Policies>
			<Filters>
				<ThresholdFilter level="info" onMatch="ACCEPT"
					onMismatch="DENY" />
			</Filters>
		</RollingFile>
	</Appenders>

	<Loggers>
		<!-- 指定使用异步的appender，该appender也要加入root才能生效 -->
				<!-- 使用<asyncRoot> 或 <asyncLogger>，includeLocation="true"是必须要设置才会有类路径等一些信息打印出来。 -->
		<AsyncLogger  name="asyncLogerOut" level="trace" includeLocation="true">
			<appender-ref ref="trace_appender" />
			<appender-ref ref="debug_appender" />
			<appender-ref ref="applog_appender" />
		</AsyncLogger>
		<!-- 配置日志的根节点 -->
		<root level="trace" >
			<appender-ref ref="console_out_appender" />
			<appender-ref ref="console_err_appender" />
			<appender-ref ref="trace_appender" />
			<appender-ref ref="debug_appender" />
			<appender-ref ref="applog_appender" />
		</root>

		<!-- 第三方日志系统 -->
		<!-- <logger name="org.springframework.core" level="info" />
		<logger name="org.springframework.beans" level="info" />
		<logger name="org.springframework.context" level="info" />
		<logger name="org.springframework.web" level="info" /> -->
		<logger name="org.springframework" level="info" />
		<logger name="org.jboss.netty" level="warn" />
		<logger name="org.apache.http" level="warn" />

	</Loggers>
</configuration>  